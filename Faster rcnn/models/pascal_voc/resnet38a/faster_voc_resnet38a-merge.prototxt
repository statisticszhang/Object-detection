name: "faster_voc_resnet38a"
layer {
  name: 'input-data'
  type: 'Python'
  top: 'data'
  top: 'im_info'
  top: 'gt_boxes'
  python_param {
    module: 'roi_data_layer.layer'
    layer: 'RoIDataLayer'
    param_str: "'num_classes': 21"
  }
}

################ resnet38a ################
layer {
  bottom: "data"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad:1
    stride: 1
  }
}
layer {
  bottom: "conv1"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    kernel_size: 3
    pad: 0
    stride: 2
    pool: MAX
  }
} 

layer {
  bottom: "pool1"
  top: "res1_scale"
  name: "res1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res1_scale"
  top: "res1_scale"
  name: "res1_relu"
  type: "ReLU"
}
layer {
  bottom: "res1_scale"
  top: "res1_match_conv"
  name: "res1_match_conv"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res1_scale"
  top: "res1_conv1"
  name: "res1_conv1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res1_conv1"
  top: "res1_conv1"
  name: "res1_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res1_conv1"
  top: "res1_conv1"
  name: "res1_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res1_conv1"
  top: "res1_conv2"
  name: "res1_conv2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res1_match_conv"
  bottom: "res1_conv2"
  top: "res1_eletwise"
  name: "res1_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res1_eletwise"
  top: "res2_scale"
  name: "res2_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res2_scale"
  top: "res2_scale"
  name: "res2_relu"
  type: "ReLU"
}
layer {
  bottom: "res2_scale"
  top: "res2_conv1"
  name: "res2_conv1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res2_conv1"
  top: "res2_conv1"
  name: "res2_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res2_conv1"
  top: "res2_conv1"
  name: "res2_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res2_conv1"
  top: "res2_conv2"
  name: "res2_conv2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res1_eletwise"
  bottom: "res2_conv2"
  top: "res2_eletwise"
  name: "res2_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res2_eletwise"
  top: "res3_scale"
  name: "res3_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res3_scale"
  top: "res3_scale"
  name: "res3_relu"
  type: "ReLU"
}
layer {
  bottom: "res3_scale"
  top: "res3_conv1"
  name: "res3_conv1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res3_conv1"
  top: "res3_conv1"
  name: "res3_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res3_conv1"
  top: "res3_conv1"
  name: "res3_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res3_conv1"
  top: "res3_conv2"
  name: "res3_conv2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res2_eletwise"
  bottom: "res3_conv2"
  top: "res3_eletwise"
  name: "res3_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res3_eletwise"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    kernel_size: 3
    pad: 0
    stride: 2
    pool: MAX
  }
}
layer {
  bottom: "pool2"
  top: "res4_scale"
  name: "res4_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res4_scale"
  top: "res4_scale"
  name: "res4_relu"
  type: "ReLU"
}
layer {
  bottom: "res4_scale"
  top: "res4_match_conv"
  name: "res4_match_conv"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res4_scale"
  top: "res4_conv1"
  name: "res4_conv1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res4_conv1"
  top: "res4_conv1"
  name: "res4_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res4_conv1"
  top: "res4_conv1"
  name: "res4_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res4_conv1"
  top: "res4_conv2"
  name: "res4_conv2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res4_match_conv"
  bottom: "res4_conv2"
  top: "res4_eletwise"
  name: "res4_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res4_eletwise"
  top: "res5_scale"
  name: "res5_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res5_scale"
  top: "res5_scale"
  name: "res5_relu"
  type: "ReLU"
}
layer {
  bottom: "res5_scale"
  top: "res5_conv1"
  name: "res5_conv1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res5_conv1"
  top: "res5_conv1"
  name: "res5_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res5_conv1"
  top: "res5_conv1"
  name: "res5_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res5_conv1"
  top: "res5_conv2"
  name: "res5_conv2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res4_eletwise"
  bottom: "res5_conv2"
  top: "res5_eletwise"
  name: "res5_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res5_eletwise"
  top: "res6_scale"
  name: "res6_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res6_scale"
  top: "res6_scale"
  name: "res6_relu"
  type: "ReLU"
}
layer {
  bottom: "res6_scale"
  top: "res6_conv1"
  name: "res6_conv1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res6_conv1"
  top: "res6_conv1"
  name: "res6_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res6_conv1"
  top: "res6_conv1"
  name: "res6_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res6_conv1"
  top: "res6_conv2"
  name: "res6_conv2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res5_eletwise"
  bottom: "res6_conv2"
  top: "res6_eletwise"
  name: "res6_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res6_eletwise"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    kernel_size: 3
    pad: 0
    stride: 2
    pool: MAX
  }
}
layer {
  bottom: "pool3"
  top: "res7_scale"
  name: "res7_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res7_scale"
  top: "res7_scale"
  name: "res7_relu"
  type: "ReLU"
}
layer {
  bottom: "res7_scale"
  top: "res7_match_conv"
  name: "res7_match_conv"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res7_scale"
  top: "res7_conv1"
  name: "res7_conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res7_conv1"
  top: "res7_conv1"
  name: "res7_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res7_conv1"
  top: "res7_conv1"
  name: "res7_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res7_conv1"
  top: "res7_conv2"
  name: "res7_conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res7_match_conv"
  bottom: "res7_conv2"
  top: "res7_eletwise"
  name: "res7_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res7_eletwise"
  top: "res8_scale"
  name: "res8_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res8_scale"
  top: "res8_scale"
  name: "res8_relu"
  type: "ReLU"
}
layer {
  bottom: "res8_scale"
  top: "res8_conv1"
  name: "res8_conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res8_conv1"
  top: "res8_conv1"
  name: "res8_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res8_conv1"
  top: "res8_conv1"
  name: "res8_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res8_conv1"
  top: "res8_conv2"
  name: "res8_conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res7_eletwise"
  bottom: "res8_conv2"
  top: "res8_eletwise"
  name: "res8_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res8_eletwise"
  top: "res9_scale"
  name: "res9_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res9_scale"
  top: "res9_scale"
  name: "res9_relu"
  type: "ReLU"
}
layer {
  bottom: "res9_scale"
  top: "res9_conv1"
  name: "res9_conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res9_conv1"
  top: "res9_conv1"
  name: "res9_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res9_conv1"
  top: "res9_conv1"
  name: "res9_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res9_conv1"
  top: "res9_conv2"
  name: "res9_conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res8_eletwise"
  bottom: "res9_conv2"
  top: "res9_eletwise"
  name: "res9_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res9_eletwise"
  top: "res10_scale"
  name: "res10_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res10_scale"
  top: "res10_scale"
  name: "res10_relu"
  type: "ReLU"
}
layer {
  bottom: "res10_scale"
  top: "res10_conv1"
  name: "res10_conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res10_conv1"
  top: "res10_conv1"
  name: "res10_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res10_conv1"
  top: "res10_conv1"
  name: "res10_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res10_conv1"
  top: "res10_conv2"
  name: "res10_conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res9_eletwise"
  bottom: "res10_conv2"
  top: "res10_eletwise"
  name: "res10_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res10_eletwise"
  top: "res11_scale"
  name: "res11_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res11_scale"
  top: "res11_scale"
  name: "res11_relu"
  type: "ReLU"
}
layer {
  bottom: "res11_scale"
  top: "res11_conv1"
  name: "res11_conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res11_conv1"
  top: "res11_conv1"
  name: "res11_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res11_conv1"
  top: "res11_conv1"
  name: "res11_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res11_conv1"
  top: "res11_conv2"
  name: "res11_conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res10_eletwise"
  bottom: "res11_conv2"
  top: "res11_eletwise"
  name: "res11_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res11_eletwise"
  top: "res12_scale"
  name: "res12_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res12_scale"
  top: "res12_scale"
  name: "res12_relu"
  type: "ReLU"
}
layer {
  bottom: "res12_scale"
  top: "res12_conv1"
  name: "res12_conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res12_conv1"
  top: "res12_conv1"
  name: "res12_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res12_conv1"
  top: "res12_conv1"
  name: "res12_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res12_conv1"
  top: "res12_conv2"
  name: "res12_conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res11_eletwise"
  bottom: "res12_conv2"
  top: "res12_eletwise"
  name: "res12_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res12_eletwise"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    kernel_size: 3
    pad: 0
    stride: 2
    pool: MAX
  }
}
layer {
  bottom: "pool4"
  top: "res13_scale"
  name: "res13_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res13_scale"
  top: "res13_scale"
  name: "res13_relu"
  type: "ReLU"
}
layer {
  bottom: "res13_scale"
  top: "res13_match_conv"
  name: "res13_match_conv"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res13_scale"
  top: "res13_conv1"
  name: "res13_conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res13_conv1"
  top: "res13_conv1"
  name: "res13_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res13_conv1"
  top: "res13_conv1"
  name: "res13_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res13_conv1"
  top: "res13_conv2"
  name: "res13_conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 1024
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res13_match_conv"
  bottom: "res13_conv2"
  top: "res13_eletwise"
  name: "res13_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res13_eletwise"
  top: "res14_scale"
  name: "res14_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res14_scale"
  top: "res14_scale"
  name: "res14_relu"
  type: "ReLU"
}
layer {
  bottom: "res14_scale"
  top: "res14_conv1"
  name: "res14_conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res14_conv1"
  top: "res14_conv1"
  name: "res14_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res14_conv1"
  top: "res14_conv1"
  name: "res14_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res14_conv1"
  top: "res14_conv2"
  name: "res14_conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 1024
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res13_eletwise"
  bottom: "res14_conv2"
  top: "res14_eletwise"
  name: "res14_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res14_eletwise"
  top: "res15_scale"
  name: "res15_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res15_scale"
  top: "res15_scale"
  name: "res15_relu"
  type: "ReLU"
}
layer {
  bottom: "res15_scale"
  top: "res15_conv1"
  name: "res15_conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res15_conv1"
  top: "res15_conv1"
  name: "res15_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res15_conv1"
  top: "res15_conv1"
  name: "res15_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res15_conv1"
  top: "res15_conv2"
  name: "res15_conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 1024
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res14_eletwise"
  bottom: "res15_conv2"
  top: "res15_eletwise"
  name: "res15_eletwise"
  type: "Eltwise"
}

#============== RPN ===============
layer {
  name: "rpn_conv_3x3"
  type: "Convolution"
  bottom: "res15_eletwise"
  top: "rpn_output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu_3x3"
  type: "ReLU"
  bottom: "rpn_output"
  top: "rpn_output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 18   # 2(bg/fg) * 9(anchors)
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 36   # 4 * 9(anchors)
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: 'rpn-data'
  type: 'Python'
  bottom: 'rpn_cls_score'
  bottom: 'gt_boxes'
  bottom: 'im_info'
  bottom: 'data'
  top: 'rpn_labels'
  top: 'rpn_bbox_targets'
  top: 'rpn_bbox_inside_weights'
  top: 'rpn_bbox_outside_weights'
  python_param {
    module: 'rpn.anchor_target_layer'
    layer: 'AnchorTargetLayer'
    param_str: "'feat_stride': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  propagate_down: 1
  propagate_down: 0
  top: "rpn_cls_loss"
  loss_weight: 1
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: 'rpn_bbox_inside_weights'
  bottom: 'rpn_bbox_outside_weights'
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3.0
  }
}

#============== ROI Proposal ===============
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: 'proposal'
  type: 'Python'
  bottom: 'rpn_cls_prob_reshape'
  bottom: 'rpn_bbox_pred'
  bottom: 'im_info'
  top: 'rpn_rois'
  python_param {
    module: 'rpn.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "'feat_stride': 16"
  }
}
layer {
  name: 'roi-data'
  type: 'Python'
  bottom: 'rpn_rois'
  bottom: 'gt_boxes'
  top: 'rois'
  top: 'labels'
  top: 'bbox_targets'
  top: 'bbox_inside_weights'
  top: 'bbox_outside_weights'
  python_param {
    module: 'rpn.proposal_target_layer'
    layer: 'ProposalTargetLayer'
    param_str: "'num_classes': 21"
  }
}

#============== RCNN ===============
layer {
  name: "roi_pool"
  type: "ROIPooling"
  bottom: "res15_eletwise"
  bottom: "rois"
  top: "roi_pool"
  roi_pooling_param {
    pooled_w: 14
    pooled_h: 14
    spatial_scale: 0.062500
  }
}
layer {
  bottom: "roi_pool"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    kernel_size: 3
    pad: 0
    stride: 2
    pool: MAX
  }
}
layer {
  bottom: "pool5"
  top: "res16_scale"
  name: "res16_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res16_scale"
  top: "res16_scale"
  name: "res16_relu"
  type: "ReLU"
}
layer {
  bottom: "res16_scale"
  top: "res16_match_conv"
  name: "res16_match_conv"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 2048
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res16_scale"
  top: "res16_conv1"
  name: "res16_conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res16_conv1"
  top: "res16_conv1"
  name: "res16_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res16_conv1"
  top: "res16_conv1"
  name: "res16_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res16_conv1"
  top: "res16_conv2"
  name: "res16_conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 1024
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res16_conv2"
  top: "res16_conv2"
  name: "res16_conv2_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res16_conv2"
  top: "res16_conv2"
  name: "res16_conv2_relu"
  type: "ReLU"
}
layer {
  bottom: "res16_conv2"
  top: "res16_conv3"
  name: "res16_conv3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 2048
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res16_match_conv"
  bottom: "res16_conv3"
  top: "res16_eletwise"
  name: "res16_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res16_eletwise"
  top: "res17_scale"
  name: "res17_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res17_scale"
  top: "res17_scale"
  name: "res17_relu"
  type: "ReLU"
}
layer {
  bottom: "res17_scale"
  top: "res17_match_conv"
  name: "res17_match_conv"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 4096
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res17_scale"
  top: "res17_conv1"
  name: "res17_conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res17_conv1"
  top: "res17_conv1"
  name: "res17_conv1_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res17_conv1"
  top: "res17_conv1"
  name: "res17_conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "res17_conv1"
  top: "res17_conv2"
  name: "res17_conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 2048
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res17_conv2"
  top: "res17_conv2"
  name: "res17_conv2_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res17_conv2"
  top: "res17_conv2"
  name: "res17_conv2_relu"
  type: "ReLU"
}
layer {
  bottom: "res17_conv2"
  top: "res17_conv3"
  name: "res17_conv3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 4096
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res17_match_conv"
  bottom: "res17_conv3"
  top: "res17_eletwise"
  name: "res17_eletwise"
  type: "Eltwise"
}
layer {
  bottom: "res17_eletwise"
  top: "res17_eletwise"
  name: "res17_eletwise_scale"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res17_eletwise"
  top: "res17_eletwise"
  name: "res17_eletwise_relu"
  type: "ReLU"
}
layer {
  bottom: "res17_eletwise"
  top: "pool_ave"
  name: "pool_ave"
  type: "Pooling"
  pooling_param {
    global_pooling : true
    pool: AVE
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "pool_ave"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 21
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "pool_ave"
  top: "bbox_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 84
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  propagate_down: 1
  propagate_down: 0
  top: "loss_cls"
  loss_weight: 1
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 1
}

