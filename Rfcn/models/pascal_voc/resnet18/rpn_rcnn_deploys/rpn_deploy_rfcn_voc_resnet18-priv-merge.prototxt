input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 600
  dim: 600
}

input: "im_info"
input_shape {
  dim: 1
  dim: 3
}

################ resnet18 ################
layer {
  bottom: "data"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 7
    pad: 3
    stride: 2
    bias_term: false
  }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "scale_conv1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "conv1_relu"
  type: "ReLU"
}
layer {
  bottom: "conv1"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    kernel_size: 3
    stride: 2
    pad:1
    pool: MAX
    ceil_mode: false
  }
}
layer {
  bottom: "pool1"
  top: "res2a_branch2a"
  name: "res2a_branch2a"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  name: "scale2a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  name: "res2a_branch2a_relu"
  type: "ReLU"
}
layer {
  bottom: "res2a_branch2a"
  top: "res2a_branch2b"
  name: "res2a_branch2b"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  name: "scale2a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "pool1"
  bottom: "res2a_branch2b"
  top: "res2a"
  name: "res2a"
  type: "Eltwise"
}
layer {
  bottom: "res2a"
  top: "res2a"
  name: "res2a_relu"
  type: "ReLU"
}
layer {
  bottom: "res2a"
  top: "res2b_branch2a"
  name: "res2b_branch2a"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  name: "scale2b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  name: "res2b_branch2a_relu"
  type: "ReLU"
}
layer {
  bottom: "res2b_branch2a"
  top: "res2b_branch2b"
  name: "res2b_branch2b"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  name: "scale2b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res2a"
  bottom: "res2b_branch2b"
  top: "res2b"
  name: "res2b"
  type: "Eltwise"
}
layer {
  bottom: "res2b"
  top: "res2b"
  name: "res2b_relu"
  type: "ReLU"
}
layer {
  bottom: "res2b"
  top: "res3a_branch1"
  name: "res3a_branch1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}
layer {
  bottom: "res3a_branch1"
  top: "res3a_branch1"
  name: "scale3a_branch1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res2b"
  top: "res3a_branch2a"
  name: "res3a_branch2a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 2
    bias_term: false
  }
}
layer {
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  name: "scale3a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  name: "res3a_branch2a_relu"
  type: "ReLU"
}
layer {
  bottom: "res3a_branch2a"
  top: "res3a_branch2b"
  name: "res3a_branch2b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  name: "scale3a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res3a_branch1"
  bottom: "res3a_branch2b"
  top: "res3a"
  name: "res3a"
  type: "Eltwise"
}
layer {
  bottom: "res3a"
  top: "res3a"
  name: "res3a_relu"
  type: "ReLU"
}
layer {
  bottom: "res3a"
  top: "res3b_branch2a"
  name: "res3b_branch2a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  name: "scale3b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  name: "res3b_branch2a_relu"
  type: "ReLU"
}
layer {
  bottom: "res3b_branch2a"
  top: "res3b_branch2b"
  name: "res3b_branch2b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  name: "scale3b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res3a"
  bottom: "res3b_branch2b"
  top: "res3b"
  name: "res3b"
  type: "Eltwise"
}
layer {
  bottom: "res3b"
  top: "res3b"
  name: "res3b_relu"
  type: "ReLU"
}
layer {
  bottom: "res3b"
  top: "res4a_branch1"
  name: "res4a_branch1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}
layer {
  bottom: "res4a_branch1"
  top: "res4a_branch1"
  name: "scale4a_branch1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res3b"
  top: "res4a_branch2a"
  name: "res4a_branch2a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 2
    bias_term: false
  }
}
layer {
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  name: "scale4a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  name: "res4a_branch2a_relu"
  type: "ReLU"
}
layer {
  bottom: "res4a_branch2a"
  top: "res4a_branch2b"
  name: "res4a_branch2b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  name: "scale4a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res4a_branch1"
  bottom: "res4a_branch2b"
  top: "res4a"
  name: "res4a"
  type: "Eltwise"
}
layer {
  bottom: "res4a"
  top: "res4a"
  name: "res4a_relu"
  type: "ReLU"
}
layer {
  bottom: "res4a"
  top: "res4b_branch2a"
  name: "res4b_branch2a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  name: "scale4b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  name: "res4b_branch2a_relu"
  type: "ReLU"
}
layer {
  bottom: "res4b_branch2a"
  top: "res4b_branch2b"
  name: "res4b_branch2b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  name: "scale4b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res4a"
  bottom: "res4b_branch2b"
  top: "res4b"
  name: "res4b"
  type: "Eltwise"
}
layer {
  bottom: "res4b"
  top: "res4b"
  name: "res4b_relu"
  type: "ReLU"
}
layer {
  bottom: "res4b"
  top: "res5a_branch1"
  name: "res5a_branch1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res5a_branch1"
  top: "res5a_branch1"
  name: "scale5a_branch1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res4b"
  top: "res5a_branch2a"
  name: "res5a_branch2a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 2
    dilation: 2
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  name: "scale5a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  name: "res5a_branch2a_relu"
  type: "ReLU"
}
layer {
  bottom: "res5a_branch2a"
  top: "res5a_branch2b"
  name: "res5a_branch2b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 2
    dilation: 2
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  name: "scale5a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res5a_branch1"
  bottom: "res5a_branch2b"
  top: "res5a"
  name: "res5a"
  type: "Eltwise"
}
layer {
  bottom: "res5a"
  top: "res5a"
  name: "res5a_relu"
  type: "ReLU"
}
layer {
  bottom: "res5a"
  top: "res5b_branch2a"
  name: "res5b_branch2a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 2
    dilation: 2
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  name: "scale5b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  name: "res5b_branch2a_relu"
  type: "ReLU"
}
layer {
  bottom: "res5b_branch2a"
  top: "res5b_branch2b"
  name: "res5b_branch2b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 2
    dilation: 2
    stride: 1
    bias_term: false
  }
}
layer {
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
  name: "scale5b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
}
layer {
  bottom: "res5a"
  bottom: "res5b_branch2b"
  top: "res5b"
  name: "res5b"
  type: "Eltwise"
}
layer {
  bottom: "res5b"
  top: "res5b"
  name: "res5b_relu"
  type: "ReLU"
}

#========= RPN ============
layer {
  name: "rpn_conv_3x3"
  type: "Convolution"
  bottom: "res4b"
  top: "rpn_output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu_3x3"
  type: "ReLU"
  bottom: "rpn_output"
  top: "rpn_output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 18   # 2(bg/fg) * 9(anchors)
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 36   # 4 * 9(anchors)
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}


#============== ROI Proposal ===============
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: 'proposal'
  type: 'Python'
  bottom: 'rpn_cls_prob_reshape'
  bottom: 'rpn_bbox_pred'
  bottom: 'im_info'
  top: 'rois'
  top: 'rpn-scores'
  python_param {
    module: 'rpn.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "'feat_stride': 16"
  }
}


#============ new conv layer ===============
layer {
  bottom: "res5b"
  top: "conv_new_1"
  name: "conv_new_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv_new_1"
  top: "conv_new_1"
  name: "conv_new_1_relu"
  type: "ReLU"
}
layer {
  bottom: "conv_new_1"
  top: "rfcn_cls"
  name: "rfcn_cls"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1029 # 21*(7^2) cls_num*(score_maps_size^2)
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv_new_1"
  top: "rfcn_bbox"
  name: "rfcn_bbox"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 392 # 8*(7^2) cls_num*(score_maps_size^2)
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

